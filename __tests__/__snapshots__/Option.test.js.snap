// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Option should render correctly with all props, with color as array 1`] = `
.c0 {
  border-radius: 50%;
  padding: 12% 12% calc(12% + (200px * 0.04));
  width: 100%;
  height: 100%;
  border: none;
  box-shadow: inset 0px calc((200px * 0.04) * -1) 0px 0px rgb(0 0 0 / 30%);
  cursor: pointer;
  background: linear-gradient(hsl(230,89%,62%),hsl(230,89%,65%));
}

.c0:active {
  box-shadow: none;
  padding: 12%;
  -webkit-transform: translateY(calc(200px * 0.04));
  -ms-transform: translateY(calc(200px * 0.04));
  transform: translateY(calc(200px * 0.04));
}

.c1 {
  box-shadow: inset 0px calc(200px * 0.025) 0px 0px rgb(0 0 0 / 20%);
  background: #fff;
  border-radius: 50%;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1:hover {
  background: #f0f0f0;
}

.c2 {
  object-fit: contain;
  width: calc(200px * 0.35);
  height: calc(200px * 0.35);
}

<Option
  color={
    Array [
      "hsl(230, 89%, 62%)",
      "hsl(230, 89%, 65%)",
    ]
  }
  icon="images/icon-paper.svg"
  name="paper"
  onClick={[MockFunction]}
  size={200}
>
  <styled.button
    background={
      Array [
        "hsl(230, 89%, 62%)",
        "hsl(230, 89%, 65%)",
      ]
    }
    id="option-paper"
    onClick={[Function]}
    size={200}
    type="button"
  >
    <button
      className="c0"
      id="option-paper"
      onClick={[Function]}
      size={200}
      type="button"
    >
      <styled.div
        size={200}
      >
        <div
          className="c1"
          size={200}
        >
          <styled.img
            alt="paper"
            size={200}
            src="images/icon-paper.svg"
          >
            <img
              alt="paper"
              className="c2"
              size={200}
              src="images/icon-paper.svg"
            />
          </styled.img>
        </div>
      </styled.div>
    </button>
  </styled.button>
</Option>
`;

exports[`Option should render correctly with all props, with color as string 1`] = `
.c0 {
  border-radius: 50%;
  padding: 12% 12% calc(12% + (200px * 0.04));
  width: 100%;
  height: 100%;
  border: none;
  box-shadow: inset 0px calc((200px * 0.04) * -1) 0px 0px rgb(0 0 0 / 30%);
  cursor: pointer;
  background: #000;
}

.c0:active {
  box-shadow: none;
  padding: 12%;
  -webkit-transform: translateY(calc(200px * 0.04));
  -ms-transform: translateY(calc(200px * 0.04));
  transform: translateY(calc(200px * 0.04));
}

.c1 {
  box-shadow: inset 0px calc(200px * 0.025) 0px 0px rgb(0 0 0 / 20%);
  background: #fff;
  border-radius: 50%;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1:hover {
  background: #f0f0f0;
}

.c2 {
  object-fit: contain;
  width: calc(200px * 0.35);
  height: calc(200px * 0.35);
}

<Option
  color="#000"
  icon="images/icon-paper.svg"
  name="paper"
  onClick={[MockFunction]}
  size={200}
>
  <styled.button
    background="#000"
    id="option-paper"
    onClick={[Function]}
    size={200}
    type="button"
  >
    <button
      className="c0"
      id="option-paper"
      onClick={[Function]}
      size={200}
      type="button"
    >
      <styled.div
        size={200}
      >
        <div
          className="c1"
          size={200}
        >
          <styled.img
            alt="paper"
            size={200}
            src="images/icon-paper.svg"
          >
            <img
              alt="paper"
              className="c2"
              size={200}
              src="images/icon-paper.svg"
            />
          </styled.img>
        </div>
      </styled.div>
    </button>
  </styled.button>
</Option>
`;
